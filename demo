source .demoscript

kn service delete stream test test2 pulltest >/dev/null 2>&1
kn job delete --all

comment We start with a simple app
doit cat app-hi

comment --pause And the Dockerfile used to build its image
doit --showcmd="cat Dockerfile.app" Dockerize -n app-hi

comment --pause "Deploy it... (as a 'task')"
doit kn service create test --image duglin/app-hi -l type=task
URL=$(tail -1 out)

comment --pause Now hit it
doit curl -s ${URL}

comment --pause Check pods
doit kubectl get pods

comment --pause "Load it up (10 clients)"
doit ./load -l 10 0 ${URL}

comment --pause "See pods didn't scale"
doit kubectl get pods

comment --pause Now set concurrency to 1
doit kn service update test --concurrency-limit=1

comment --pause "Load it up again"
doit ./load -l 10 0 ${URL}

comment --pause "See pods DID scale"
doit kubectl get pods

comment --pause "Create a KnService that uses certain nodes"
comment --pause "Update service to only use certain nodes"
doit kn service update test -l flavor=2x16

doit "kubectl get pods -o custom-columns=NAME:.metadata.name,NODE:.status.hostIP,FLAVOR:.metadata.labels.flavor && kubectl get nodes -o custom-columns=NAME:.metadata.name,FLAVOR:.metadata.labels.flavor"

comment --pause "Load it to show it only scales on the selected node"
doit ./load -l 10 0 ${URL}

doit "kubectl get pods -o custom-columns=NAME:.metadata.name,NODE:.status.hostIP,FLAVOR:.metadata.labels.flavor && kubectl get nodes -o custom-columns=NAME:.metadata.name,FLAVOR:.metadata.labels.flavor"

doit kn service create pulltest --image duglin/app -l type=pull
URL=$(tail -1 out)
comment "Run and wait for it to finish"
doit "curl -s ${URL}/queueA" # ?async"
doit "kubectl logs --tail=-1 -l serving.knative.dev/service=pulltest -c user-container"

comment "Run but don't wait"
doit "curl -s ${URL}/queueB -HPrefer:respond-async"
doit --ignorerc "timeout 10 kubectl logs -f --tail=-1 -l serving.knative.dev/service=pulltest -c user-container"

comment "Run as a job so we can ask for retries (in this case until it passes)"
doit kn job create job1 -s pulltest -w --retry=-1
doit kn job get job1

doit kn service create stream --image duglin/app-echo -l type=task
URL=$(tail -1 out)

comment --pause "Demo streaming"
doit --ignorerc timeout 10s ./client ${URL}

comment --pause "Clean..."
doit kn service delete test test2 pulltest stream
doit kn job del --all
