#!/bin/bash

. .demoscript

function klog() {
  copt="-c user-container"
  if [[ "$*" == *"--all-containers"* ]]; then
    copt=""
  fi
  kubectl logs --tail=-1 $copt -l serving.knative.dev/service=$*
}

set -e

kn job status job1 > /dev/null 2>&1 || true
kn job status job2 > /dev/null 2>&1 || true
kn service delete test > /dev/null 2>&1 || true

comment "Our app:"
doit cat app
comment "Notice it will fail 1/3 of the time"

comment "Deploy the service (task)"
doit kn service create test --image duglin/app -l type=task

comment "Now create our batch job (run service 5 times, no retries)"
doit kn job create job1 --service=test --num=5

comment "Now wait for it to finish"
doit kn job wait job1
comment "Notice that some should have failed"

# doit --noexec klog test
# klog test

comment "Now create another batch with retries"
doit kn job create job2 --service=test --num=5 --retry=3
doit time kn job wait job2
comment "Now all should have PASSed but some with retries"

comment "Force our service to scale"
doit kn service update test --concurrency-limit=1
comment "Run batch job 50 times, retry 10 times, but 10 at the same time"
comment "Should force our service to scale, but only to about 10"
doit time kn job create job3 --service=test --num=50 --retry=10 --parallel=10 --env PASS=true -w
# doit time kn job wait job3
doit kubectl get pods \| grep -e -2-

doit kn service update test --concurrency-limit=4
doit time kn job create job3 --service=test --num=50 --retry=10 --parallel=10 --env PASS=true -w
# doit time kn job wait job3
doit kubectl get pods \| grep -e -3-

comment "Now do a job with ALL possible flags"
doit kn service create test1 --image=duglin/app -l type=task
doit kn job create job4 --service=test1 \
  --env=PASS=true --retry=2 --parallel=5 --wait -- arg1 arg2
doit --noexec klog test1
kubectl logs --tail=-1 -l serving.knative.dev/service=test1 -c user-container |
 sed -n 'H; /Output:/h; ${g;p;}'
comment "Notice the env vars and the cmd line args that were passed in"

kn service delete test test1
